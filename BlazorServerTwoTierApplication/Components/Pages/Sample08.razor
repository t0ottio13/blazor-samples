@page "/Sample08"

@using BlazorServerTwoTierApplication.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid

@inject IDbContextFactory<PubsDbContext> DbFactory
@inject NavigationManager NavigationManager 

<h3>Sample08: ページ遷移</h3>

@if (authors == null)
{
    <div>データロード中</div>
}
else
{
    <div>
        <QuickGrid Items="@authors" Pagination="@paginationState">
            <TemplateColumn Title="著者ID" Sortable="true" >
                <a href="" onclick="@(() => OnSelectButtonClicked(context))" 
                    @onclick:preventDefault>@context.AuthorId</a>  
            </TemplateColumn>
            <TemplateColumn Title="著者名"
                            Sortable="true"
                            SortBy="@(GridSort<Author>.ByAscending(a => a.AuthorFirstName).ThenAscending(a => a.AuthorLastName))">
                @(context.AuthorFirstName) @(context.AuthorLastName)
            </TemplateColumn>
            <PropertyColumn Property="@(a => a.Phone)" Title="電話番後" />
            <PropertyColumn Property="@(a => a.State)" Title="州" />
            <TemplateColumn Title="契約有無">
                @(context.Contract ? "契約あり" : "契約なし")
            </TemplateColumn>
        </QuickGrid>

        <Paginator State="@paginationState"/>
    </div>
}

@code {
    private IQueryable<Author>? authors = null;

    private readonly PaginationState paginationState = new(){ ItemsPerPage = 10 };

    protected override async Task OnInitializedAsync()
    {
        await using (var pubs = await DbFactory.CreateDbContextAsync())
        {
            authors = (await pubs.Authors.ToListAsync()).AsQueryable();
        }
    }

    private void OnSelectButtonClicked(Author selectedAuthor)
    {
        NavigationManager.NavigateTo($"Sample08b/{selectedAuthor.AuthorId}");
    }
}